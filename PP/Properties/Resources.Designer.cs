//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PP.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PP.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap downAll {
            get {
                object obj = ResourceManager.GetObject("downAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap downAlld {
            get {
                object obj = ResourceManager.GetObject("downAlld", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap downTail {
            get {
                object obj = ResourceManager.GetObject("downTail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap downTaild {
            get {
                object obj = ResourceManager.GetObject("downTaild", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   # PaperPlanes
        ///「日本で生まれ育った高性能紙飛行機　その設計・製作・飛行技術のすべて」　二宮康明著
        ///の計算式を使用して紙飛行機の設計を行うアプリです。&lt;br&gt;
        ///電卓片手に計算するのがかなり面倒なので作ったアプリです。&lt;br&gt;
        ///&lt;br&gt;
        ///新しいバージョンを作りました。PP.exeです。&lt;br&gt;
        ///&lt;br&gt;
        ///普通の尾翼と双尾翼の2種類に対応しています。&lt;br&gt;
        ///![PaperPlanes](pp.png)&lt;br&gt;
        ///
        ///# Usage
        ///簡単な設計の仕方です。
        ///
        ///
        ///## 尾翼の種類を選ぶ
        ///後からでも大丈夫ですが、尾翼の形式を選びます。&lt;br&gt;
        ///「**通常垂直尾翼**」と「**双垂直尾翼**」の二つが選べます。&lt;br&gt;
        ///
        ///## 主翼の大きさを決める
        ///タブで「主翼」「水平尾翼」「垂直」とあるので「主翼」を選び、好きな形にします。&lt;br&gt;
        ///&lt;br&gt;
        ///単位はすべてmm(ミリメートル)です。
        ///
        ///* **位置**&lt;br&gt;先頭からの位置。
        ///* **翼長**&lt;br&gt;中心から翼端までの距離。全長の半分なので注意してください。
        ///* **翼根**&lt;br&gt;翼の根元の長さ。
        ///* ** [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string HelpText {
            get {
                return ResourceManager.GetString("HelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap upALL {
            get {
                object obj = ResourceManager.GetObject("upALL", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap upAlld {
            get {
                object obj = ResourceManager.GetObject("upAlld", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap upTail {
            get {
                object obj = ResourceManager.GetObject("upTail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   型 System.Drawing.Bitmap のローカライズされたリソースを検索します。
        /// </summary>
        internal static System.Drawing.Bitmap upTaild {
            get {
                object obj = ResourceManager.GetObject("upTaild", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
